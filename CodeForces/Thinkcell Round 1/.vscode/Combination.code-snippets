{
  "C++ snippet": {
  "prefix": "combination",
  "body": [
    "struct nCr{",
    "    ll maxx , mod; ",
    "    vector<ll> fact, ifact; ",
    "    inline ll mul(ll a, ll b) { return a *1LL* b % mod ;}",
    "    ll power(ll a, ll n) {",
    "        if(n == 0) return 1 ; ",
    "        int p = power(a, n/2) % mod ; ",
    "        p = mul(p, p) ;  ",
    "        return n & 1 ? mul(p, a) : p ; ",
    "    }",
    "    int invMod(int a) {return power(a,mod-2);}",
    "    void pre() {",
    "        fact[0] = 1 ;",
    "        for(int i = 1;i< maxx;++i) fact[i] = mul(i, fact[i-1]) ;",
    "        ifact[maxx-1] = invMod(fact[maxx-1]) ; ",
    "        for(int i = maxx-1 ; i>0 ;--i) ifact[i-1] = mul(ifact[i], i) ;",
    "    }",
    "    nCr(int _mxN, int _M) {",
    "        maxx = _mxN + 1; ",
    "        mod = _M ; ",
    "        fact.resize(maxx) ; ",
    "        ifact.resize(maxx) ;",
    "        pre() ;  ",
    "    }",
    "    ll C(ll n, ll r) {",
    "        if (n < r || r < 0 || n < 0) return 0;",
    "        return mul(fact[n], mul(ifact[r], ifact[n-r])) ;",
    "    }",
    "};",
    "//maxx N we need",
    "//const int N = 100;",
    "// initialise nCr struct",
    "// nCr comb(N , mod);",
    "",
    ""
  ],
  "description": "this is for n combination of r"
}
}